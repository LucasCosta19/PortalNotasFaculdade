@{
    var sessao = Convert.ToString(Session["Tipo"]);
    if (sessao == "Aluno" || sessao == "Professor")
    {
        Response.Write("<script>location.href='http://localhost:51948/NotasAlunosPortal';</script>");
    }
}

@model PortalNotasFaculdades.Models.DisciplinasCursos

@{
    ViewBag.Title = "Disciplinas";
}

<div class="topRefs">
    <a href="~/Home">
        <span class="sp1"><strong><i class="fa fa-home fa-2x"></i></strong></span>
    </a>
    <a href="~/DisciplinasCursos">
        <span class="txt sp3"><strong>Disciplinas dos Cursos</strong></span>
    </a>
    <a href="#">
        <span class="txt sp4"><strong>Editar</strong></span>
    </a>
</div>
<hr />

<h2 style="text-align: center;"><strong>Disciplinas dos Cursos</strong></h2>
<hr />

<div class="formCreate">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="">
            <h4><strong>Editar - @Model.NomeDisciplina</strong></h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.DisciplinaId)

            <div class="form-group">
                @Html.LabelFor(model => model.CursoId, "Curso", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CursoId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CursoId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NomeDisciplina, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NomeDisciplina, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeDisciplina, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SemestreDisciplina, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SemestreDisciplina, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    @Html.ValidationMessageFor(model => model.SemestreDisciplina, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HorasAulasDadas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HorasAulasDadas, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    @Html.ValidationMessageFor(model => model.HorasAulasDadas, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="hidden" name="FaculdadeId" id="FaculdadeId" value="@Session["FaculdadeId"]" />
            <input type="hidden" name="EmailFaculdade" id="EmailFaculdade" value="@Session["EmailFaculdade"]" />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar Alterações" class="btn btn-success" /> |
                    @Html.ActionLink("Voltar á Lista", "Index", new { }, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
    }
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('a').removeClass("active");
        $("#disc").addClass("active");
    });
</script>