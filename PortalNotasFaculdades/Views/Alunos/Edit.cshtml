@{
    var sessao = Convert.ToString(Session["Tipo"]);
    if (sessao == "Aluno" || sessao == "Professor")
    {
        Response.Write("<script>location.href='http://localhost:51948/NotasAlunosPortal';</script>");
    }
}

@model PortalNotasFaculdades.Models.Alunos

@{
    ViewBag.Title = "Alunos";
}

<div class="topRefs">
    <a href="~/Home">
        <span class="sp1"><strong><i class="fa fa-home fa-2x"></i></strong></span>
    </a>
    <a href="~/Alunos">
        <span class="txt sp3"><strong>Alunos</strong></span>
    </a>
    <a href="#">
        <span class="txt sp4"><strong>Editar</strong></span>
    </a>
</div>
<hr />

<h2 style="text-align: center;"><strong>Alunos</strong></h2>
<hr />

<div class="formCreate">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h4><strong>Editar - @Model.NomeCompleto</strong></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UsuarioId)

        <div class="form-group">
            @Html.LabelFor(model => model.CursoId, "Curso", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CursoId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CursoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CpfUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CpfUsuario, new { htmlAttributes = new { @class = "form-control", onkeypress = "mascara(this, '###.###.###-##')", @maxlength = "14" } })
                @Html.ValidationMessageFor(model => model.CpfUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeCompleto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnderecoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnderecoUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnderecoUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CidadeUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CidadeUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CidadeUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstadoUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstadoUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelefoneUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TelefoneUsuario, new { htmlAttributes = new { @class = "form-control", onkeypress = "mascara(this, '## #####-####')", @maxlength = "13", } })
                @Html.ValidationMessageFor(model => model.TelefoneUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SituacaoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="SituacaoUsuario" id="SituacaoUsuario" class="form-control">
                    <option value="A">Ativo</option>
                    <option value="I">Inativo</option>
                </select>
                @*Html.EditorFor(model => model.SituacaoUsuario, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.SituacaoUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })

        <input type="hidden" name="InstituicaoId" id="InstituicaoId" value="@Session["InstituicaoId"]" />
        <input type="hidden" name="EmailInstituicao" id="EmailInstituicao" value="@Session["EmailInstituicao"]" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar Alterações" class="btn btn-success" /> |
                @Html.ActionLink("Voltar á Lista", "Index", new { }, new { @class = "btn btn-secondary" })
            </div>
        </div>
    }
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('a').removeClass("active");
        $("#alun").addClass("active");
    });
</script>